{
	"info": {
		"_postman_id": "7d11088b-4e58-4924-9d71-bb39c528a1ff",
		"name": "DSG Schema Registry API",
		"description": "The Schema Registry API is used to access the Schema Library within Adobe Experience Platform. The registry provides a user interface and RESTful API from which all available library resources are accessible.\n\n* Related documentation:\n  * [XDM documentation](http://www.adobe.com/go/xdm-home-en)\n\n* Visualize API calls with Postman (a free, third-party software):\n  * [Schema Registry API Postman collection on GitHub](https://github.com/adobe/experience-platform-postman-samples/blob/master/apis/experience-platform/Schema%20Registry%20API.postman_collection.json)\n  * [Video guide for creating the Postman environment](https://video.tv.adobe.com/v/28832)\n  * [Steps for importing environments and collections in Postman](https://learning.getpostman.com/docs/postman/collection_runs/using_environments_in_collection_runs/)\n\n* API paths:\n  * PLATFORM Gateway URL: https://<span>platform.adobe.io\n  * Base path for this API: /data/foundation/schemaregistry\n  * Example of a complete path for making a call to \"/stats\": https://<span>platform.adobe.io/data/foundation/schemaregistry/stats\n\n* Required headers:\n  * All calls require the headers `Authorization`, `x-gw-ims-org-id`, and `x-api-key`. For more information on how to obtain these values, see the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).\n  * All resources in Experience Platform are isolated to specific virtual sandboxes. All requests to Platform APIs require the header `x-sandbox-name` whose value is the all-lowercase name of the sandbox the operation will take place in (for example, \"prod\"). See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.\n  * All GET requests to the Schema Registry require an `Accept` header to determine what data is returned by the system. See the [section on `Accept` headers](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/getting-started.html?lang=en#accept) in the Schema Registry developer guide for more information.\n  * All requests with a payload in the request body (such as POST, PUT, and PATCH calls) must include the header `Content-Type` with a value of `application/json`.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Public Lands Schema and field groups Copy",
			"item": [
				{
					"name": "Athlete Schema and Field groups Copy",
					"item": [
						{
							"name": "Athlete Status Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"var Athlete_status_FG_Id = json['$id'];\r",
											"postman.setEnvironmentVariable(\"Athlete_status_FG_Id\", Athlete_status_FG_Id);\r",
											"tests[\"Athlete_status_FG_Id = \" + Athlete_status_FG_Id] = true; \r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Athlete Status Details\",\r\n  \"type\": \"object\",\r\n  \"description\": \"Field group for Athlete Status Details\",\r\n  \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n\r\n  \r\n   \"definitions\": {\r\n            \"AthleteStatusDetails\": {\r\n              \"properties\": {\r\n                \"{{dsgtenantId}}\": {\r\n                  \"type\":\"object\",\r\n                          \"properties\": {\r\n\t\t\t\t\t\t\t  \"AthleteStatus\":{\r\n                     \"title\":\"AthleteStatus\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                     \"properties\":{\r\n                            \"employeeFlag\": {\r\n                                \"title\": \"Employee Flag\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Employee Flag\"\r\n                            },\r\n                            \"ipPromotability\": {\r\n                                \"title\": \"IP Promotability\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"IP Promotability\"\r\n                            },\r\n\t\t\t\t\t\t\t\"mailDeliverabilityFlag\": {\r\n                                \"title\": \"mail Deliverability Flag\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"mail Deliverability Flag\"\r\n                            },\r\n\t\t\t\t\t\t\t \"removeFromProgram\": {\r\n                                \"title\": \"Remove From Program\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Remove From Program\"\r\n                            },\r\n\t\t\t\t\t\t\t\"status\": {\r\n                                \"title\": \"Status\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Status\",\r\n                  \"enum\":[\r\n                     \"A\",\r\n                     \"I\"\r\n                  ],\r\n                  \"meta:enum\":{\r\n                     \"A\":\"A\",\r\n                     \"I\":\"I\"\r\n                  }\r\n                            }\r\n                          }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n                    }\r\n                 \r\n                }\r\n              \r\n            }\r\n        },\r\n \"allOf\": [\r\n            {\r\n            \"$ref\": \"#/definitions/AthleteStatusDetails\"\r\n            }\r\n\t\t\t]\r\n      }\r\n\r\n"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"fieldgroups"
									],
									"query": [
										{
											"key": "TENANT_ID",
											"value": "{{TENANT_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Athlete Address Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"var Athlete_Address_FG_Id = json['$id'];\r",
											"postman.setEnvironmentVariable(\"Athlete_Address_FG_Id\", Athlete_Address_FG_Id);\r",
											"tests[\"Athlete_Address_FG_Id = \" + Athlete_Address_FG_Id] = true; \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"title\":\"Athlete Address Details\",\r\n   \"type\":\"object\",\r\n   \"description\":\"Field group for Athlete Address Details\",\r\n   \"meta:intendedToExtend\":[\r\n      \"https://ns.adobe.com/xdm/context/profile\"\r\n   ],\r\n   \"definitions\":{\r\n      \"AthleteAddressDetails\":{\r\n         \"properties\":{\r\n            \"{{dsgtenantId}}\":{\r\n               \"type\":\"object\",\r\n               \"properties\":{\r\n                  \"AthleteAddress\":{\r\n                     \"title\":\"AthleteAddress\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                     \"properties\":{\r\n                        \"appartment\":{\r\n                           \"title\":\"Appartment\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"Appartment\"\r\n                        },\r\n                        \"city\":{\r\n                           \"title\":\"City\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"City\"\r\n                        },\r\n                        \"country\":{\r\n                           \"title\":\"Country\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"Country\"\r\n                        },\r\n                        \"headofHouseHold\":{\r\n                           \"title\":\"Head of House Hold\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"Head of House Hold\"\r\n                        },\r\n                        \"marketingHouseHoldKey\":{\r\n                           \"title\":\"Marketing House Hold Key\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"Marketing House Hold Key\"\r\n                        },\r\n                        \"state\":{\r\n                           \"title\":\"State\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"State\"\r\n                        },\r\n                        \"street\":{\r\n                           \"title\":\"Street\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"Street\"\r\n                        },\r\n                        \"zip\":{\r\n                           \"title\":\"Zip\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"Zip\"\r\n                        }\r\n                     }\r\n                  }\r\n               }\r\n            }\r\n         }\r\n      }\r\n   },\r\n   \"allOf\":[\r\n      {\r\n         \"$ref\":\"#/definitions/AthleteAddressDetails\"\r\n      }\r\n   ]\r\n}"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"fieldgroups"
									],
									"query": [
										{
											"key": "TENANT_ID",
											"value": "{{TENANT_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Athlete DSGAudit Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"var Athlete_DSGAudit_FG_Id = json['$id'];\r",
											"postman.setEnvironmentVariable(\"Athlete_DSGAudit_FG_Id\", Athlete_DSGAudit_FG_Id);\r",
											"tests[\"Athlete_DSGAudit_FG_Id = \" + Athlete_DSGAudit_FG_Id] = true; \r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"title\":\"Athlete DSG Audit Details\",\r\n   \"type\":\"object\",\r\n   \"description\":\"Field group for Athlete DSG Audit Details\",\r\n   \"meta:intendedToExtend\":[\r\n      \"https://ns.adobe.com/xdm/context/profile\"\r\n   ],\r\n   \"definitions\":{\r\n      \"dsgsAuditDetails\":{\r\n         \"properties\":{\r\n            \"{{dsgtenantId}}\":{\r\n               \"type\":\"object\",\r\n\t\t\t   \"properties\": {\r\n\t\t\t\t\t\"athlete\":{\r\n                     \"title\":\"Athlete\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n               \"properties\":{\r\n                  \"dsgAudit\":{\r\n                     \"title\":\"DSG Audit\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                    \"$ref\": \"{{DSG_Audit_datatype_id}}\"\r\n                  }\r\n               }\r\n            }\r\n\t\t }\r\n\t  }\r\n         }\r\n      }\r\n   },\r\n   \"allOf\":[\r\n      {\r\n         \"$ref\":\"#/definitions/dsgsAuditDetails\"\r\n      }\r\n   ]\r\n}"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"fieldgroups"
									],
									"query": [
										{
											"key": "TENANT_ID",
											"value": "{{TENANT_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Identity Athlete Id Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"var Identity_FG_Id = json['$id'];\r",
											"postman.setEnvironmentVariable(\"Identity_FG_Id\", Identity_FG_Id);\r",
											"tests[\"Identity_FG_Id = \" + Identity_FG_Id] = true; \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Athlete Id Details\",\r\n  \"type\": \"object\",\r\n  \"description\": \"Field group for Athlete Id Details\",\r\n  \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n\r\n  \r\n   \"definitions\": {\r\n            \"AthleteIdDetails\": {\r\n              \"properties\": {\r\n                \"{{dsgtenantId}}\": {\r\n                  \"type\":\"object\",\r\n\t\t\t\t  \"properties\": {\r\n\t\t\t\t\t\"AthleteIdInfo\":{\r\n                     \"title\":\"AthleteIdInfo\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                          \"properties\": {\r\n                            \"athleteid\":{\r\n                        \"title\":\"Athlete ID\",\r\n                        \"description\":\"\",\r\n                        \"type\":\"string\"\r\n                            }\r\n\t\t\t\t\t\t\t\r\n                          }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n                    }\r\n                 \r\n                }\r\n              \r\n            }\r\n        },\r\n \"allOf\": [\r\n            {\r\n            \"$ref\": \"#/definitions/AthleteIdDetails\"\r\n            }\r\n\t\t\t]\r\n      }\r\n\r\n"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"fieldgroups"
									],
									"query": [
										{
											"key": "TENANT_ID",
											"value": "{{TENANT_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Athlete PII Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"var Athlete_PII_FG_Id = json['$id'];\r",
											"postman.setEnvironmentVariable(\"Athlete_PII_FG_Id\", Athlete_PII_FG_Id);\r",
											"tests[\"Athlete_PII_FG_Id = \" + Athlete_PII_FG_Id] = true; \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"title\":\"Athlete PII Details\",\r\n   \"type\":\"object\",\r\n   \"description\":\"Field group for Athlete PII Details\",\r\n   \"meta:intendedToExtend\":[\r\n      \"https://ns.adobe.com/xdm/context/profile\"\r\n   ],\r\n   \"definitions\":{\r\n      \"athletePII\":{\r\n         \"properties\":{\r\n            \"{{dsgtenantId}}\":{\r\n               \"type\":\"object\",\r\n\t\t\t   \"properties\": {\r\n\t\t\t\t\t\"athlete\":{\r\n                     \"title\":\"Athlete\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n\t\t\t   \"properties\": {\r\n\t\t\t\t\t\"athletePIIDetails\":{\r\n                     \"title\":\"AthletePIIDetails\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n               \"properties\":{\r\n                  \"firstName\":{\r\n                     \"title\":\"First Name\",\r\n                     \"type\":\"string\",\r\n                     \"description\":\"First Name\"\r\n                  },\r\n                  \"lastName\":{\r\n                     \"title\":\"Last Name\",\r\n                     \"type\":\"string\",\r\n                     \"description\":\"Last Name\"\r\n                  },\r\n                  \"birthDate\":{\r\n                     \"title\":\"Birth Date\",\r\n                     \"type\":\"string\",\r\n                     \"description\":\"Birth Date\"\r\n                  },\r\n                  \"gender\":{\r\n                     \"title\":\"Gender\",\r\n                     \"type\":\"string\",\r\n                     \"description\":\"Gender\",\r\n                     \"enum\":[\r\n                        \"M\",\r\n                        \"F\",\r\n                        \"Undefined\"\r\n                     ],\r\n                     \"meta:enum\":{\r\n                        \"M\":\"Male\",\r\n                        \"F\":\"Female\",\r\n                        \"Undefined\":\"Undefined\"\r\n                     }\r\n                  }\r\n               }\r\n\t\t\t}\r\n\t\t }\r\n\t\t\t}\r\n\t\t }\r\n            }\r\n         }\r\n      }\r\n   },\r\n   \"allOf\":[\r\n      {\r\n         \"$ref\":\"#/definitions/athletePII\"\r\n      }\r\n   ]\r\n}"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"fieldgroups"
									],
									"query": [
										{
											"key": "TENANT_ID",
											"value": "{{TENANT_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Athlete Purchase Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"var Athlete_Purchase_FG_Id = json['$id'];\r",
											"postman.setEnvironmentVariable(\"Athlete_Purchase_FG_Id\", Athlete_Purchase_FG_Id);\r",
											"tests[\"Athlete_Purchase_FG_Id = \" + Athlete_Purchase_FG_Id] = true; \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Athlete Purchase Details\",\r\n  \"type\": \"object\",\r\n  \"description\": \"Field group for Athlete Purchase Details\",\r\n  \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n\r\n  \r\n   \"definitions\": {\r\n            \"athletePurchase\": {\r\n              \"properties\": {\r\n                \"{{dsgtenantId}}\": {\r\n                  \"type\":\"object\",\r\n\t\t\t\t  \"properties\": {\r\n\t\t\t\t\t\"athlete\":{\r\n                     \"title\":\"Athlete\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n\t\t\t\t  \"properties\": {\r\n\t\t\t\t\t\t\t  \"athletePurchaseDetails\":{\r\n                     \"title\":\"AthletePurchaseDetails\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                          \"properties\": {\r\n                            \"firstOnlinePurchase\": {\r\n                                \"title\": \"First Online Purchase\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"First Online Purchase\"\r\n                            },\r\n                            \"firstPurchase\": {\r\n                                \"title\": \"First Purchase\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"First Purchase\"\r\n                            },\r\n\t\t\t\t\t\t\t\"lastBMPurchase\": {\r\n                                \"title\": \"Last BM Purchase\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Last BM Purchase\"\r\n                            },\r\n\t\t\t\t\t\t\t \"lastPurchase\": {\r\n                                \"title\": \"Last Purchase\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Last Purchase\"\r\n                            },\r\n\t\t\t\t\t\t\t\"transactionTotal\": {\r\n                                \"title\": \"Transaction Total\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Transaction Total\"\r\n                            }\r\n                          }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n                    }\r\n                 \r\n                }\r\n              \r\n            }\r\n        },\r\n \"allOf\": [\r\n            {\r\n            \"$ref\": \"#/definitions/athletePurchase\"\r\n            }\r\n\t\t\t]\r\n      }\r\n\r\n"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"fieldgroups"
									],
									"query": [
										{
											"key": "TENANT_ID",
											"value": "{{TENANT_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Athlete Schema",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"type\": \"object\",\r\n  \"title\": \"Athlete Schema\",\r\n  \"description\": \"Schema for Athlete data\",\r\n  \"allOf\": [{\r\n    \"$ref\": \"https://ns.adobe.com/xdm/context/profile\"\r\n  },\r\n    {\r\n       \"$ref\": \"{{Athlete_status_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{Athlete_Address_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{Athlete_ID_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{Athlete_DSGAudit_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{Athlete_PII_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{Athlete_Purchase_FG_Id}}\"\r\n     }\r\n\t ]\r\n}"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/schemas",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas"
									]
								}
							},
							"response": []
						}
					],
					"description": "A field group is a reusable component that defines one or more fields to implement certain functions within a schema based on a compatible class."
				},
				{
					"name": "Public Lands Purchase Details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);\r",
									"var PL_Purchase_FG_Id = json['$id'];\r",
									"postman.setEnvironmentVariable(\"PL_Purchase_FG_Id\", PL_Purchase_FG_Id);\r",
									"tests[\"PL_Purchase_FG_Id = \" + PL_Purchase_FG_Id] = true; \r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Public Lands Purchase Details\",\r\n  \"type\": \"object\",\r\n  \"description\": \"Field group for Public Lands Purchase Details\",\r\n  \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n\r\n  \r\n   \"definitions\": {\r\n            \"purchaseInfo\": {\r\n              \"properties\": {\r\n                \"{{dsgtenantId}}\": {\r\n                  \"type\":\"object\",\r\n\t\t\t\t  \"properties\": {\r\n\t\t\t\t\t\t\t  \"publicLands\":{\r\n                     \"title\":\"publicLands\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n\t\t\t\t  \"properties\": {\r\n\t\t\t\t\t\t\t  \"purchaseDetails\":{\r\n                     \"title\":\"PurchaseDetails\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                          \"properties\": {\r\n                            \"firstPurchaseDate\": {\r\n                                \"title\": \"First Purchase Date\",\r\n                                \"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\"format\":\"date-time\",\r\n                                \"description\": \"First Purchase Date\"\r\n                            },\r\n                            \"lastPurchaseDate\": {\r\n                                \"title\": \"Last Purchase Date\",\r\n                                \"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\"format\":\"date-time\",\r\n                                \"description\": \"Last Purchase Date\"\r\n                            },\r\n\t\t\t\t\t\t\t \"firstOnlinePurchaseDate\": {\r\n                                \"title\": \"First Online Purchase Date\",\r\n                                \"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\"format\":\"date-time\",\r\n                                \"description\": \"First Online Purchase Date\"\r\n                            },\r\n                            \"lastOnlinePurchaseDate\": {\r\n                                \"title\": \"Last Online Purchase Date\",\r\n                                \"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\"format\":\"date-time\",\r\n                                \"description\": \"Last Online Purchase Date\"\r\n                            },\r\n\t\t\t\t\t\t\t\"onlineOnlyShopper\": {\r\n                                \"title\": \"Online Only Shopper\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Online Only Shopper\"\r\n                            },\r\n\t\t\t\t\t\t\t\"omniChannelShopper\": {\r\n                                \"title\": \"Omni Channel Shopper\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Omni Channel Shopper\"\r\n                            },\r\n\t\t\t\t\t\t\t\"percentOnlineTransaction\": {\r\n                                \"title\": \"Percent Online Transaction\",\r\n                                \"type\": \"number\",\r\n                                \"description\": \"percentOnlineTransaction\"\r\n                            },\r\n                            \"lastBMPurchaseDate\": {\r\n                                \"title\": \"Last BM Purchase Date\",\r\n                                \"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\"format\":\"date-time\",\r\n                                \"description\": \"Last BM Purchase Date\"\r\n                            }\r\n                          }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n                    }\r\n                 \r\n                }\r\n              \r\n            }\r\n        },\r\n \"allOf\": [\r\n            {\r\n            \"$ref\": \"#/definitions/purchaseInfo\"\r\n            }\r\n\t\t\t]\r\n      }\r\n\r\n"
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"tenant",
								"fieldgroups"
							],
							"query": [
								{
									"key": "TENANT_ID",
									"value": "{{TENANT_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Public Lands Score Card Attributes",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);\r",
									"var PL_Score_Card_FG_Id = json['$id'];\r",
									"postman.setEnvironmentVariable(\"PL_Score_Card_FG_Id\", PL_Score_Card_FG_Id);\r",
									"tests[\"PL_Score_Card_FG_Id = \" + PL_Score_Card_FG_Id] = true; \r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Public Lands Score Card Attributes\",\r\n  \"type\": \"object\",\r\n  \"description\": \"Field group for Public Lands Score Card Attributes Details\",\r\n  \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n\r\n  \r\n   \"definitions\": {\r\n            \"PLScoreCardAttributes\": {\r\n              \"properties\": {\r\n                \"{{dsgtenantId}}\": {\r\n                  \"type\":\"object\",\r\n\t\t\t\t  \"properties\": {\r\n\t\t\t\t\t\t\t  \"PLScoreCardAttributesInfo\":{\r\n                     \"title\":\"PLScoreCardAttributesInfo\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                          \"properties\": {\r\n                            \"scoreCardBrandWelcomeDate\": {\r\n                                \"title\": \"Score Card Brand Welcome Date\",\r\n                                \"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\"format\":\"date-time\",\r\n                                \"description\": \"Score Card Brand Welcome Date\"\r\n                            },\r\n                            \"hubplBrandWelcomeDate\": {\r\n                                \"title\": \"HUBPL Brand Welcome Date\",\r\n                                \"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\"format\":\"date-time\",\r\n                                \"description\": \"HUBPL Brand Welcome Date\"\r\n                            },\r\n\t\t\t\t\t\t\t\"bestScoreCardEmail\": {\r\n                                \"title\": \"Best Score Card Email\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Best Score Card Email\"\r\n                            },\r\n\t\t\t\t\t\t\t\"dollarsToGold\": {\r\n                                \"title\": \"DollarsToGold\",\r\n                                \"type\": \"integer\",\r\n                                \"description\": \"DollarsToGold\"\r\n                            },\r\n\t\t\t\t\t\t\t\"goldFlag\": {\r\n                                \"title\": \"Gold Flag\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Gold Flag\"\r\n                            },\r\n\t\t\t\t\t\t\t\"goldWelcomeDate\": {\r\n                                \"title\": \"Gold Welcome Date\",\r\n                                \"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\"format\":\"date-time\",\r\n                                \"description\": \"Gold Welcome Date\"\r\n                            },\r\n\t\t\t\t\t\t\t\"goldLastEnrollDate\": {\r\n                                \"title\": \"Gold Last Welcome Date\",\r\n                                \"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\"format\":\"date-time\",\r\n                                \"description\": \"Gold Last Welcome Date\"\r\n                            },\r\n                            \"consectiveGoldDays\": {\r\n                                \"title\": \"Consective Gold Days\",\r\n                                \"type\": \"integer\",\t\t\t\t\t\t\t\t\r\n                                \"description\": \"Last BM Purchase Date\"\r\n                            },\r\n\t\t\t\t\t\t\t\"scoreCardFlag\": {\r\n                                \"title\": \"Score Card Flag\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Score Card Flag\"\r\n                            }\r\n                          }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n                    }\r\n                 \r\n                }\r\n              \r\n            }\r\n        },\r\n \"allOf\": [\r\n            {\r\n            \"$ref\": \"#/definitions/PLScoreCardAttributes\"\r\n            }\r\n\t\t\t]\r\n      }\r\n\r\n"
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"tenant",
								"fieldgroups"
							],
							"query": [
								{
									"key": "TENANT_ID",
									"value": "{{TENANT_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Public Lands Store Details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);\r",
									"var PL_Store_Details_FG_Id = json['$id'];\r",
									"postman.setEnvironmentVariable(\"PL_Store_Details_FG_Id\", PL_Store_Details_FG_Id);\r",
									"tests[\"PL_Store_Details_FG_Id = \" + PL_Store_Details_FG_Id] = true; \r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Public Lands Store Details\",\r\n  \"type\": \"object\",\r\n  \"description\": \"Field group for Public Lands Store Details\",\r\n  \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n\r\n  \r\n   \"definitions\": {\r\n            \"PLStoreDetails\": {\r\n              \"properties\": {\r\n                \"{{dsgtenantId}}\": {\r\n                  \"type\":\"object\",\r\n\t\t\t\t  \"properties\": {\r\n\t\t\t\t\t\t\t  \"PLStoreDetailsInfo\":{\r\n                     \"title\":\"PLStoreDetailsInfo\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                          \"properties\": {\r\n                            \r\n\t\t\t\t\t\t\t\"rank1DistancetoClosestStrore\": {\r\n                                \"title\": \"Rank 1 Distance to Closest Strore\",\r\n                                \"type\": \"integer\",\r\n                                \"description\": \"Rank 1 Distance to Closest Strore\"\r\n                            },\r\n                            \"rank2ClosestStore\": {\r\n                                \"title\": \"Rank 2 Closest Store\",\r\n                                \"type\": \"integer\",\t\t\t\t\t\t\t\t\r\n                                \"description\": \"Rank 2 Closest Store\"\r\n                            },\r\n\t\t\t\t\t\t\t\"Rank2DistancetoClosestStrore\": {\r\n                                \"title\": \"Rank 2 Distance to Closest Strore\",\r\n                                \"type\": \"integer\",\r\n                                \"description\": \"Rank 2 Distance to Closest Strore\"\r\n                            },\r\n                            \"rank3ClosestStore\": {\r\n                                \"title\": \"Rank 3 Closest Store\",\r\n                                \"type\": \"integer\",\t\t\t\t\t\t\t\t\r\n                                \"description\": \"Rank 3 Closest Store\"\r\n                            },\r\n\t\t\t\t\t\t\t\"Rank3DistancetoClosestStrore\": {\r\n                                \"title\": \"Rank 3 Distance to Closest Strore\",\r\n                                \"type\": \"integer\",\r\n                                \"description\": \"Rank 3 Distance to Closest Strore\"\r\n                            }\r\n\t\t\t\t\t\t\t\r\n                          }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n                    }\r\n                 \r\n                }\r\n              \r\n            }\r\n        },\r\n \"allOf\": [\r\n            {\r\n            \"$ref\": \"#/definitions/PLStoreDetails\"\r\n            }\r\n\t\t\t]\r\n      }\r\n\r\n"
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"tenant",
								"fieldgroups"
							],
							"query": [
								{
									"key": "TENANT_ID",
									"value": "{{TENANT_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Public Lands Transaction Total",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);\r",
									"var PL_Transaction_Total_FG_Id = json['$id'];\r",
									"postman.setEnvironmentVariable(\"PL_Transaction_Total_FG_Id\", PL_Transaction_Total_FG_Id);\r",
									"tests[\"PL_Transaction_Total_FG_Id = \" + PL_Transaction_Total_FG_Id] = true; \r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Public Lands Transaction Total Details\",\r\n  \"type\": \"object\",\r\n  \"description\": \"Field group for Public Lands Transaction Total Details\",\r\n  \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n\r\n  \r\n   \"definitions\": {\r\n            \"PLTransactionTotalDetails\": {\r\n              \"properties\": {\r\n                \"{{dsgtenantId}}\": {\r\n                  \"type\":\"object\",\r\n\t\t\t\t  \"properties\": {\r\n\t\t\t\t\t\t\t  \"PLTransactionTotalInfo\":{\r\n                     \"title\":\"PLTransactionTotalInfo\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                          \"properties\": {\r\n                            \r\n\t\t\t\t\t\t\t\"transactionTotal1Y\": {\r\n                                \"title\": \"Transaction Total 1 Y\",\r\n                                \"type\": \"integer\",\r\n                                \"description\": \"Transaction Total 1 Y\"\r\n                            },\r\n                            \"TransactionTotal2Y\": {\r\n                                \"title\": \"Transaction Total 2 Y\",\r\n                                \"type\": \"integer\",\t\t\t\t\t\t\t\t\r\n                                \"description\": \"Transaction Total 2 Y\"\r\n                            }\r\n\t\t\t\t\t\t\t\r\n                          }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n                    }\r\n                 \r\n                }\r\n              \r\n            }\r\n        },\r\n \"allOf\": [\r\n            {\r\n            \"$ref\": \"#/definitions/PLTransactionTotalDetails\"\r\n            }\r\n\t\t\t]\r\n      }\r\n\r\n"
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"tenant",
								"fieldgroups"
							],
							"query": [
								{
									"key": "TENANT_ID",
									"value": "{{TENANT_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Public Lands Generic Attributes",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);\r",
									"var PL_Generic_Attr_Id = json['$id'];\r",
									"postman.setEnvironmentVariable(\"PL_Generic_Attr_Id\", PL_Generic_Attr_Id);\r",
									"tests[\"PL_Generic_Attr_Id = \" + PL_Generic_Attr_Id] = true; \r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Public Lands Generic Attributes\",\r\n  \"type\": \"object\",\r\n  \"description\": \"Field group for Public Lands Generic Attribute\",\r\n  \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n\r\n  \r\n   \"definitions\": {\r\n            \"plGenericAttributes\": {\r\n              \"properties\": {\r\n                \"{{dsgtenantId}}\": {\r\n                  \"type\":\"object\",\r\n\t\t\t\t  \"properties\": {\r\n\t\t\t\t\t\t\t  \"publicLands\":{\r\n                     \"title\":\"publicLands\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n\t\t\r\n                          \"properties\": {\r\n                            \r\n\t\t\t\t\t\t\t\"plHubMasterAccountID\": {\r\n                                \"title\": \"PL Hub Master Account ID\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"PL Hub Master Account ID\"\r\n                            },\r\n                            \"hubFlag\": {\r\n                                \"title\": \"Hub Flag\",\r\n                                \"type\": \"string\",\t\t\t\t\t\t\t\t\r\n                                \"description\": \"Hub Flag\"\r\n                            },\r\n\t\t\t\t\t\t\t\"bestEmail\": {\r\n                                \"title\": \"Best Email\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Best Email\"\r\n                            },\r\n                            \"emailOnlyFlag\": {\r\n                                \"title\": \"Email Only Flag\",\r\n                                \"type\": \"string\",\t\t\t\t\t\t\t\t\r\n                                \"description\": \"Email Only Flag\"\r\n                            },\r\n\t\t\t\t\t\t\t\"rookie\": {\r\n                                \"title\": \"Rookie\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Rookie\"\r\n                            },\r\n\t\t\t\t\t\t\t\"switchHitter\": {\r\n                                \"title\": \"Switch Hitter\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Switch Hitter\"\r\n                            }\r\n\t\t\t\t\t\t\t\r\n                          }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\r\n                    }\r\n                 \r\n                }\r\n              \r\n            }\r\n        },\r\n \"allOf\": [\r\n            {\r\n            \"$ref\": \"#/definitions/plGenericAttributes\"\r\n            }\r\n\t\t\t]\r\n      }\r\n\r\n"
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"tenant",
								"fieldgroups"
							],
							"query": [
								{
									"key": "TENANT_ID",
									"value": "{{TENANT_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Public Lands Schema",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\": \"object\",\r\n  \"title\": \"Public Lands\",\r\n  \"description\": \"Schema for Public Lands\",\r\n  \"allOf\": [{\r\n    \"$ref\": \"https://ns.adobe.com/xdm/context/profile\"\r\n  },\r\n    {\r\n       \"$ref\": \"{{PL_Purchase_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{PL_Score_Card_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{PL_Store_Details_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{PL_Transaction_Total_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{PL_Generic_Attr_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{Identity_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{PL_DSGAudit_FG_Id}}\"\r\n     }\r\n\t ]\r\n}"
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/schemas",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"tenant",
								"schemas"
							]
						}
					},
					"response": []
				},
				{
					"name": "Public Lands DSGAudit Details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);\r",
									"var PL_DSGAudit_FG_Id = json['$id'];\r",
									"postman.setEnvironmentVariable(\"PL_DSGAudit_FG_Id\", PL_DSGAudit_FG_Id);\r",
									"tests[\"PL_DSGAudit_FG_Id = \" + PL_DSGAudit_FG_Id] = true; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"title\":\"Public Lands DSG Audit Details\",\r\n   \"type\":\"object\",\r\n   \"description\":\"Field group for Public Lands DSG Audit Details\",\r\n   \"meta:intendedToExtend\":[\r\n      \"https://ns.adobe.com/xdm/context/profile\"\r\n   ],\r\n   \"definitions\":{\r\n      \"pldsgsAuditDetails\":{\r\n         \"properties\":{\r\n            \"{{dsgtenantId}}\":{\r\n               \"type\":\"object\",\r\n\t\t\t   \"properties\": {\r\n\t\t\t\t\t\"publicLands\":{\r\n                     \"title\":\"publicLands\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n               \"properties\":{\r\n                  \"dsgAudit\":{\r\n                     \"title\":\"DSG Audit\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                    \"$ref\": \"{{DSG_Audit_datatype_id}}\"\r\n                  }\r\n               }\r\n            }\r\n\t\t }\r\n\t  }\r\n         }\r\n      }\r\n   },\r\n   \"allOf\":[\r\n      {\r\n         \"$ref\":\"#/definitions/pldsgsAuditDetails\"\r\n      }\r\n   ]\r\n}"
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"tenant",
								"fieldgroups"
							],
							"query": [
								{
									"key": "TENANT_ID",
									"value": "{{TENANT_ID}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Token Generation",
			"item": [
				{
					"name": "IMS: JWT Generate + Auth via User Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"if (data.access_token) {",
									"    pm.environment.set(\"ACCESS_TOKEN\", data.access_token);",
									"} else {",
									"    console.log(\"Unable to acquire ACCESS_TOKEN from Adobe IMS to make further calls to Adobe I/O APIs.\")",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"const ERROR_MESSAGE = \" not found in active environment. Please ensure the correct environment is selected and populated.\";",
									"const ENV_JS_RSA_SIGN_LIBRARY = \"ADOBE_IO_ACCESS_TOKEN__JS_RSA_SIGN_LIBRARY\";",
									"",
									"const JS_RSA_SIGN_LIBRARY_REQUEST = {",
									"    url: 'https://kjur.github.io/jsrsasign/jsrsasign-latest-all-min.js',",
									"    method: 'GET'",
									"};",
									"",
									"if (!pm.environment.get(ENV_JS_RSA_SIGN_LIBRARY)) {",
									"    console.log(\"Loading JS RSA SIGN library from: \" + JS_RSA_SIGN_LIBRARY_REQUEST.url);",
									"",
									"    pm.sendRequest(JS_RSA_SIGN_LIBRARY_REQUEST, function (err, response) {",
									"        if (err === null) {",
									"            pm.environment.set(ENV_JS_RSA_SIGN_LIBRARY, response.text());",
									"            console.log(\"Successfully loaded JS RSA Sign library.\");",
									"            getAccessToken();",
									"        } else {",
									"            console.log(\"Could not load JS RSA Sign Library.\");",
									"        }",
									"    });",
									"} else {",
									"    // Already have the JS RSA Sign library loaded, so generate token immediately",
									"    getAccessToken();",
									"}",
									"",
									"// Tips from: https://github.com/kjur/jsrsasign/issues/199",
									"// https://github.com/kjur/jsrsasign/wiki/Tutorial-for-JWT-generation",
									"function getAccessToken() {",
									"    var navigator = {}; //fake a navigator object for the lib",
									"    var window = {}; //fake a window object for the lib",
									"",
									"    if (!pm.environment.get(ENV_JS_RSA_SIGN_LIBRARY)) {",
									"        throw new Error(\"Could not load JS RSA Sign Library from https://kjur.github.io/jsrsasign/jsrsasign-latest-all-min.js\");",
									"    } else if (!pm.environment.get(\"IMS_ORG\")) {",
									"        throw new Error(\"IMS_ORG\" + ERROR_MESSAGE);",
									"    } else if (!pm.environment.get(\"TECHNICAL_ACCOUNT_ID\")) {",
									"        throw new Error(\"TECHNICAL_ACCOUNT_ID\" + ERROR_MESSAGE);",
									"    } else if (!pm.environment.get(\"IMS\")) {",
									"        throw new Error(\"IMS\" + ERROR_MESSAGE);",
									"    } else if (!pm.environment.get(\"API_KEY\")) {",
									"        throw new Error(\"API_KEY\" + ERROR_MESSAGE);",
									"    } else if (!pm.environment.get(\"META_SCOPE\")) {",
									"        throw new Error(\"META_SCOPE\" + ERROR_MESSAGE);",
									"    } else if (!pm.environment.get(\"PRIVATE_KEY\")) {",
									"        throw new Error(\"Ensure the Private Key is added to both INITIAL and CURRENT VALUES in the active Postman environment's PRIVATE_KEY variable\");",
									"    }",
									"",
									"    eval(pm.environment.get(ENV_JS_RSA_SIGN_LIBRARY)); //import javascript jsrsasign",
									"",
									"    var header = {",
									"        \"alg\": \"RS256\"",
									"    };",
									"",
									"    var data = {",
									"        \"exp\": Math.round(87000 + Date.now() / 1000),",
									"        \"iss\": pm.environment.get(\"IMS_ORG\"),",
									"        \"sub\": pm.environment.get(\"TECHNICAL_ACCOUNT_ID\"),",
									"        \"aud\": \"https://\" + pm.environment.get(\"IMS\") + \"/c/\" + pm.environment.get(\"API_KEY\")",
									"    };",
									"",
									"    meta_scopes = pm.environment.get(\"META_SCOPE\");",
									"",
									"    if (typeof meta_scopes === 'string') {",
									"        console.log(\"meta_scopes is a string, converting to string array\");",
									"        meta_scopes = [ meta_scopes ];",
									"    }",
									"    ",
									"    if (!Array.isArray(meta_scopes)) {",
									"        throw new Error(\"Unable to coerce the META_SCOPE property value to a string array\");",
									"    }",
									"    ",
									"    meta_scopes.forEach(function (scope) {",
									"        var meta_scope = \"https://\" + pm.environment.get(\"IMS\") + \"/s/\" +",
									"            scope;",
									"        data[meta_scope] = true;",
									"    });",
									"",
									"    var secret = pm.environment.get(\"PRIVATE_KEY\");",
									"",
									"    if (!secret) {",
									"        console.log(\"Ensure the Private Key is added to both INITIAL and CURRENT VALUES in the active Postman environment's PRIVATE_KEY variable.\");",
									"    }",
									"",
									"    console.log(data);",
									"",
									"    var sHeader = JSON.stringify(header);",
									"    var sPayload = JSON.stringify(data);",
									"    var sJWT = KJUR.jws.JWS.sign(\"RS256\", sHeader, sPayload, secret);",
									"",
									"    console.log(sJWT);",
									"",
									"    pm.environment.set(\"JWT_TOKEN\", sJWT);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "client_id",
									"value": "{{API_KEY}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{CLIENT_SECRET}}",
									"type": "text"
								},
								{
									"key": "jwt_token",
									"value": "{{JWT_TOKEN}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{IMS}}/ims/exchange/jwt/",
							"protocol": "https",
							"host": [
								"{{IMS}}"
							],
							"path": [
								"ims",
								"exchange",
								"jwt",
								""
							]
						},
						"description": "Local signing leverages a 3rd party JSR Assign Crypto library to be loaded and locally sign the JWT Token using the provided Private Key. Using this method the Private Key even leaves the local machine, however 3rd party JavaScript is loaded into the Postman context.\n\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete Schema,FL,DataSets",
			"item": [
				{
					"name": "Delete a custom schema",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/schemas/:SCHEMA_ID",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"tenant",
								"schemas",
								":SCHEMA_ID"
							],
							"variable": [
								{
									"key": "SCHEMA_ID",
									"value": "_dentsuglobalpartnersbx.schemas.c5c54c992c7b7e438526379b027ac3b3daf138c0f1793393"
								}
							]
						},
						"description": "Remove an existing schema by performing a DELETE request to the `$id` of the schema being removed.\n\nA successful deletion returns an empty response body and HTTP status 204 (No Content)."
					},
					"response": []
				},
				{
					"name": "Delete a custom field group",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups/:FIELD_GROUP_ID",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"tenant",
								"fieldgroups",
								":FIELD_GROUP_ID"
							],
							"variable": [
								{
									"key": "FIELD_GROUP_ID",
									"value": "_dentsuglobalpartnersbx.mixins.892504d986698c2c24db85bd1ed6c12882ac0a0b210d1606"
								}
							]
						},
						"description": "Remove an existing field group through a DELETE request to the `$id` of the field group being removed.\n\nA successful deletion returns an empty response body and HTTP status 204 (No Content)."
					},
					"response": []
				}
			]
		},
		{
			"name": "Tenant ID",
			"item": [
				{
					"name": "Retrieve your tenant ID Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);\r",
									"var TENANT_ID = json['tenantId'];\r",
									"postman.setEnvironmentVariable(\"TENANT_ID\", TENANT_ID);\r",
									"var dsgtenantId = \"_\"+json['tenantId'];\r",
									"postman.setEnvironmentVariable(\"dsgtenantId\", dsgtenantId);\r",
									"tests[\"dsgtenantId = \" + dsgtenantId] = true; "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/stats",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"stats"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Identity Creation",
			"item": [
				{
					"name": "Create a new identity namespace",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"shared\":false,\r\n   \"description\":\"DSG AthleteId Identity\",\r\n   \"idType\":\"CROSS_DEVICE\",\r\n   \"code\":\"AthleteId\",\r\n   \"name\":\"AthleteId\"\r\n}"
						},
						"url": {
							"raw": "https://platform.adobe.io/data/core/idnamespace/identities",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"core",
								"idnamespace",
								"identities"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Data types",
			"item": [
				{
					"name": "Create DSG Audit  Dates Datatype Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"DSG_Audit_datatype_id\", json.$id);\r",
									"postman.setEnvironmentVariable(\"DSG_Audit_datatype_encoded_id\", encodeURIComponent(json.$id));\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"type\":\"object\",\r\n   \"title\":\"DSG Audit\",\r\n   \"description\":\"DSG Audit data type\",\r\n   \"properties\":{\r\n      \"createDateTime\":{\r\n         \"title\":\"Create Date Time\",\r\n         \"description\":\"Create Date Time\",\r\n         \"type\":\"string\"\r\n      },\r\n      \"updateDateTime\":{\r\n         \"title\":\"Update Date Time\",\r\n         \"description\":\"Update Date Time\",\r\n         \"type\":\"string\"\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/datatypes",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"tenant",
								"datatypes"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Runner",
			"item": [
				{
					"name": "Athlete Schema and Field groups",
					"item": [
						{
							"name": "Athlete Status Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"var Athlete_status_FG_Id = json['$id'];\r",
											"postman.setEnvironmentVariable(\"Athlete_status_FG_Id\", Athlete_status_FG_Id);\r",
											"tests[\"Athlete_status_FG_Id = \" + Athlete_status_FG_Id] = true; \r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Athlete Status Details\",\r\n  \"type\": \"object\",\r\n  \"description\": \"Field group for Athlete Status Details\",\r\n  \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n\r\n  \r\n   \"definitions\": {\r\n            \"AthleteStatusDetails\": {\r\n              \"properties\": {\r\n                \"{{dsgtenantId}}\": {\r\n                  \"type\":\"object\",\r\n                          \"properties\": {\r\n\t\t\t\t\t\t\t  \"AthleteStatus\":{\r\n                     \"title\":\"AthleteStatus\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                     \"properties\":{\r\n                            \"employeeFlag\": {\r\n                                \"title\": \"Employee Flag\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Employee Flag\"\r\n                            },\r\n                            \"ipPromotability\": {\r\n                                \"title\": \"IP Promotability\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"IP Promotability\"\r\n                            },\r\n\t\t\t\t\t\t\t\"mailDeliverabilityFlag\": {\r\n                                \"title\": \"mail Deliverability Flag\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"mail Deliverability Flag\"\r\n                            },\r\n\t\t\t\t\t\t\t \"removeFromProgram\": {\r\n                                \"title\": \"Remove From Program\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Remove From Program\"\r\n                            },\r\n\t\t\t\t\t\t\t\"status\": {\r\n                                \"title\": \"Status\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Status\",\r\n                  \"enum\":[\r\n                     \"A\",\r\n                     \"I\"\r\n                  ],\r\n                  \"meta:enum\":{\r\n                     \"A\":\"A\",\r\n                     \"I\":\"I\"\r\n                  }\r\n                            }\r\n                          }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n                    }\r\n                 \r\n                }\r\n              \r\n            }\r\n        },\r\n \"allOf\": [\r\n            {\r\n            \"$ref\": \"#/definitions/AthleteStatusDetails\"\r\n            }\r\n\t\t\t]\r\n      }\r\n\r\n"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"fieldgroups"
									],
									"query": [
										{
											"key": "TENANT_ID",
											"value": "{{TENANT_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Athlete Address Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"var Athlete_Address_FG_Id = json['$id'];\r",
											"postman.setEnvironmentVariable(\"Athlete_Address_FG_Id\", Athlete_Address_FG_Id);\r",
											"tests[\"Athlete_Address_FG_Id = \" + Athlete_Address_FG_Id] = true; \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"title\":\"Athlete Address Details\",\r\n   \"type\":\"object\",\r\n   \"description\":\"Field group for Athlete Address Details\",\r\n   \"meta:intendedToExtend\":[\r\n      \"https://ns.adobe.com/xdm/context/profile\"\r\n   ],\r\n   \"definitions\":{\r\n      \"AthleteAddressDetails\":{\r\n         \"properties\":{\r\n            \"{{dsgtenantId}}\":{\r\n               \"type\":\"object\",\r\n               \"properties\":{\r\n                  \"AthleteAddress\":{\r\n                     \"title\":\"AthleteAddress\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                     \"properties\":{\r\n                        \"appartment\":{\r\n                           \"title\":\"Appartment\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"Appartment\"\r\n                        },\r\n                        \"city\":{\r\n                           \"title\":\"City\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"City\"\r\n                        },\r\n                        \"country\":{\r\n                           \"title\":\"Country\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"Country\"\r\n                        },\r\n                        \"headofHouseHold\":{\r\n                           \"title\":\"Head of House Hold\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"Head of House Hold\"\r\n                        },\r\n                        \"marketingHouseHoldKey\":{\r\n                           \"title\":\"Marketing House Hold Key\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"Marketing House Hold Key\"\r\n                        },\r\n                        \"state\":{\r\n                           \"title\":\"State\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"State\"\r\n                        },\r\n                        \"street\":{\r\n                           \"title\":\"Street\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"Street\"\r\n                        },\r\n                        \"zip\":{\r\n                           \"title\":\"Zip\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"Zip\"\r\n                        }\r\n                     }\r\n                  }\r\n               }\r\n            }\r\n         }\r\n      }\r\n   },\r\n   \"allOf\":[\r\n      {\r\n         \"$ref\":\"#/definitions/AthleteAddressDetails\"\r\n      }\r\n   ]\r\n}"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"fieldgroups"
									],
									"query": [
										{
											"key": "TENANT_ID",
											"value": "{{TENANT_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Athlete DSGAudit Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"var Athlete_DSGAudit_FG_Id = json['$id'];\r",
											"postman.setEnvironmentVariable(\"Athlete_DSGAudit_FG_Id\", Athlete_DSGAudit_FG_Id);\r",
											"tests[\"Athlete_DSGAudit_FG_Id = \" + Athlete_DSGAudit_FG_Id] = true; \r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"title\":\"Athlete DSG Audit Details\",\r\n   \"type\":\"object\",\r\n   \"description\":\"Field group for Athlete DSG Audit Details\",\r\n   \"meta:intendedToExtend\":[\r\n      \"https://ns.adobe.com/xdm/context/profile\"\r\n   ],\r\n   \"definitions\":{\r\n      \"dsgsAuditDetails\":{\r\n         \"properties\":{\r\n            \"{{dsgtenantId}}\":{\r\n               \"type\":\"object\",\r\n\t\t\t   \"properties\": {\r\n\t\t\t\t\t\"athlete\":{\r\n                     \"title\":\"Athlete\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n               \"properties\":{\r\n                  \"dsgAudit\":{\r\n                     \"title\":\"DSG Audit\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                    \"$ref\": \"{{DSG_Audit_datatype_id}}\"\r\n                  }\r\n               }\r\n            }\r\n\t\t }\r\n\t  }\r\n         }\r\n      }\r\n   },\r\n   \"allOf\":[\r\n      {\r\n         \"$ref\":\"#/definitions/dsgsAuditDetails\"\r\n      }\r\n   ]\r\n}"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"fieldgroups"
									],
									"query": [
										{
											"key": "TENANT_ID",
											"value": "{{TENANT_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Identity Athlete Id Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"var Identity_FG_Id = json['$id'];\r",
											"postman.setEnvironmentVariable(\"Identity_FG_Id\", Identity_FG_Id);\r",
											"tests[\"Identity_FG_Id = \" + Identity_FG_Id] = true; \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Athlete Id Details\",\r\n  \"type\": \"object\",\r\n  \"description\": \"Field group for Athlete Id Details\",\r\n  \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n\r\n  \r\n   \"definitions\": {\r\n            \"AthleteIdDetails\": {\r\n              \"properties\": {\r\n                \"{{dsgtenantId}}\": {\r\n                  \"type\":\"object\",\r\n\t\t\t\t  \"properties\": {\r\n\t\t\t\t\t\"AthleteIdInfo\":{\r\n                     \"title\":\"AthleteIdInfo\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                          \"properties\": {\r\n                            \"athleteid\":{\r\n                        \"title\":\"Athlete ID\",\r\n                        \"description\":\"\",\r\n                        \"type\":\"string\"\r\n                            }\r\n\t\t\t\t\t\t\t\r\n                          }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n                    }\r\n                 \r\n                }\r\n              \r\n            }\r\n        },\r\n \"allOf\": [\r\n            {\r\n            \"$ref\": \"#/definitions/AthleteIdDetails\"\r\n            }\r\n\t\t\t]\r\n      }\r\n\r\n"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"fieldgroups"
									],
									"query": [
										{
											"key": "TENANT_ID",
											"value": "{{TENANT_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Athlete PII Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"var Athlete_PII_FG_Id = json['$id'];\r",
											"postman.setEnvironmentVariable(\"Athlete_PII_FG_Id\", Athlete_PII_FG_Id);\r",
											"tests[\"Athlete_PII_FG_Id = \" + Athlete_PII_FG_Id] = true; \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"title\":\"Athlete PII Details\",\r\n   \"type\":\"object\",\r\n   \"description\":\"Field group for Athlete PII Details\",\r\n   \"meta:intendedToExtend\":[\r\n      \"https://ns.adobe.com/xdm/context/profile\"\r\n   ],\r\n   \"definitions\":{\r\n      \"athletePII\":{\r\n         \"properties\":{\r\n            \"{{dsgtenantId}}\":{\r\n               \"type\":\"object\",\r\n\t\t\t   \"properties\": {\r\n\t\t\t\t\t\"athlete\":{\r\n                     \"title\":\"Athlete\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n\t\t\t   \"properties\": {\r\n\t\t\t\t\t\"athletePIIDetails\":{\r\n                     \"title\":\"AthletePIIDetails\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n               \"properties\":{\r\n                  \"firstName\":{\r\n                     \"title\":\"First Name\",\r\n                     \"type\":\"string\",\r\n                     \"description\":\"First Name\"\r\n                  },\r\n                  \"lastName\":{\r\n                     \"title\":\"Last Name\",\r\n                     \"type\":\"string\",\r\n                     \"description\":\"Last Name\"\r\n                  },\r\n                  \"birthDate\":{\r\n                     \"title\":\"Birth Date\",\r\n                     \"type\":\"string\",\r\n                     \"description\":\"Birth Date\"\r\n                  },\r\n                  \"gender\":{\r\n                     \"title\":\"Gender\",\r\n                     \"type\":\"string\",\r\n                     \"description\":\"Gender\",\r\n                     \"enum\":[\r\n                        \"M\",\r\n                        \"F\",\r\n                        \"Undefined\"\r\n                     ],\r\n                     \"meta:enum\":{\r\n                        \"M\":\"Male\",\r\n                        \"F\":\"Female\",\r\n                        \"Undefined\":\"Undefined\"\r\n                     }\r\n                  }\r\n               }\r\n\t\t\t}\r\n\t\t }\r\n\t\t\t}\r\n\t\t }\r\n            }\r\n         }\r\n      }\r\n   },\r\n   \"allOf\":[\r\n      {\r\n         \"$ref\":\"#/definitions/athletePII\"\r\n      }\r\n   ]\r\n}"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"fieldgroups"
									],
									"query": [
										{
											"key": "TENANT_ID",
											"value": "{{TENANT_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Athlete Purchase Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"var Athlete_Purchase_FG_Id = json['$id'];\r",
											"postman.setEnvironmentVariable(\"Athlete_Purchase_FG_Id\", Athlete_Purchase_FG_Id);\r",
											"tests[\"Athlete_Purchase_FG_Id = \" + Athlete_Purchase_FG_Id] = true; \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Athlete Purchase Details\",\r\n  \"type\": \"object\",\r\n  \"description\": \"Field group for Athlete Purchase Details\",\r\n  \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n\r\n  \r\n   \"definitions\": {\r\n            \"athletePurchase\": {\r\n              \"properties\": {\r\n                \"{{dsgtenantId}}\": {\r\n                  \"type\":\"object\",\r\n\t\t\t\t  \"properties\": {\r\n\t\t\t\t\t\"athlete\":{\r\n                     \"title\":\"Athlete\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n\t\t\t\t  \"properties\": {\r\n\t\t\t\t\t\t\t  \"athletePurchaseDetails\":{\r\n                     \"title\":\"AthletePurchaseDetails\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                          \"properties\": {\r\n                            \"firstOnlinePurchase\": {\r\n                                \"title\": \"First Online Purchase\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"First Online Purchase\"\r\n                            },\r\n                            \"firstPurchase\": {\r\n                                \"title\": \"First Purchase\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"First Purchase\"\r\n                            },\r\n\t\t\t\t\t\t\t\"lastBMPurchase\": {\r\n                                \"title\": \"Last BM Purchase\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Last BM Purchase\"\r\n                            },\r\n\t\t\t\t\t\t\t \"lastPurchase\": {\r\n                                \"title\": \"Last Purchase\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Last Purchase\"\r\n                            },\r\n\t\t\t\t\t\t\t\"transactionTotal\": {\r\n                                \"title\": \"Transaction Total\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Transaction Total\"\r\n                            }\r\n                          }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n                    }\r\n                 \r\n                }\r\n              \r\n            }\r\n        },\r\n \"allOf\": [\r\n            {\r\n            \"$ref\": \"#/definitions/athletePurchase\"\r\n            }\r\n\t\t\t]\r\n      }\r\n\r\n"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"fieldgroups"
									],
									"query": [
										{
											"key": "TENANT_ID",
											"value": "{{TENANT_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Athlete Schema",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"type\": \"object\",\r\n  \"title\": \"Athlete Schema\",\r\n  \"description\": \"Schema for Athlete data\",\r\n  \"allOf\": [{\r\n    \"$ref\": \"https://ns.adobe.com/xdm/context/profile\"\r\n  },\r\n    {\r\n       \"$ref\": \"{{Athlete_status_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{Athlete_Address_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{Athlete_ID_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{Athlete_DSGAudit_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{Athlete_PII_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{Athlete_Purchase_FG_Id}}\"\r\n     }\r\n\t ]\r\n}"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/schemas",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas"
									]
								}
							},
							"response": []
						}
					],
					"description": "A field group is a reusable component that defines one or more fields to implement certain functions within a schema based on a compatible class."
				},
				{
					"name": "Public Lands Schema and field groups",
					"item": [
						{
							"name": "Public Lands Purchase Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"var PL_Purchase_FG_Id = json['$id'];\r",
											"postman.setEnvironmentVariable(\"PL_Purchase_FG_Id\", PL_Purchase_FG_Id);\r",
											"tests[\"PL_Purchase_FG_Id = \" + PL_Purchase_FG_Id] = true; \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Public Lands Purchase Details\",\r\n  \"type\": \"object\",\r\n  \"description\": \"Field group for Public Lands Purchase Details\",\r\n  \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n\r\n  \r\n   \"definitions\": {\r\n            \"purchaseInfo\": {\r\n              \"properties\": {\r\n                \"{{dsgtenantId}}\": {\r\n                  \"type\":\"object\",\r\n\t\t\t\t  \"properties\": {\r\n\t\t\t\t\t\t\t  \"publicLands\":{\r\n                     \"title\":\"publicLands\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n\t\t\t\t  \"properties\": {\r\n\t\t\t\t\t\t\t  \"purchaseDetails\":{\r\n                     \"title\":\"PurchaseDetails\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                          \"properties\": {\r\n                            \"firstPurchaseDate\": {\r\n                                \"title\": \"First Purchase Date\",\r\n                                \"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\"format\":\"date-time\",\r\n                                \"description\": \"First Purchase Date\"\r\n                            },\r\n                            \"lastPurchaseDate\": {\r\n                                \"title\": \"Last Purchase Date\",\r\n                                \"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\"format\":\"date-time\",\r\n                                \"description\": \"Last Purchase Date\"\r\n                            },\r\n\t\t\t\t\t\t\t \"firstOnlinePurchaseDate\": {\r\n                                \"title\": \"First Online Purchase Date\",\r\n                                \"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\"format\":\"date-time\",\r\n                                \"description\": \"First Online Purchase Date\"\r\n                            },\r\n                            \"lastOnlinePurchaseDate\": {\r\n                                \"title\": \"Last Online Purchase Date\",\r\n                                \"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\"format\":\"date-time\",\r\n                                \"description\": \"Last Online Purchase Date\"\r\n                            },\r\n\t\t\t\t\t\t\t\"onlineOnlyShopper\": {\r\n                                \"title\": \"Online Only Shopper\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Online Only Shopper\"\r\n                            },\r\n\t\t\t\t\t\t\t\"omniChannelShopper\": {\r\n                                \"title\": \"Omni Channel Shopper\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Omni Channel Shopper\"\r\n                            },\r\n\t\t\t\t\t\t\t\"percentOnlineTransaction\": {\r\n                                \"title\": \"Percent Online Transaction\",\r\n                                \"type\": \"number\",\r\n                                \"description\": \"percentOnlineTransaction\"\r\n                            },\r\n                            \"lastBMPurchaseDate\": {\r\n                                \"title\": \"Last BM Purchase Date\",\r\n                                \"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\"format\":\"date-time\",\r\n                                \"description\": \"Last BM Purchase Date\"\r\n                            }\r\n                          }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n                    }\r\n                 \r\n                }\r\n              \r\n            }\r\n        },\r\n \"allOf\": [\r\n            {\r\n            \"$ref\": \"#/definitions/purchaseInfo\"\r\n            }\r\n\t\t\t]\r\n      }\r\n\r\n"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"fieldgroups"
									],
									"query": [
										{
											"key": "TENANT_ID",
											"value": "{{TENANT_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Public Lands Score Card Attributes",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"var PL_Score_Card_FG_Id = json['$id'];\r",
											"postman.setEnvironmentVariable(\"PL_Score_Card_FG_Id\", PL_Score_Card_FG_Id);\r",
											"tests[\"PL_Score_Card_FG_Id = \" + PL_Score_Card_FG_Id] = true; \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Public Lands Score Card Attributes\",\r\n  \"type\": \"object\",\r\n  \"description\": \"Field group for Public Lands Score Card Attributes Details\",\r\n  \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n\r\n  \r\n   \"definitions\": {\r\n            \"PLScoreCardAttributes\": {\r\n              \"properties\": {\r\n                \"{{dsgtenantId}}\": {\r\n                  \"type\":\"object\",\r\n\t\t\t\t  \"properties\": {\r\n\t\t\t\t\t\t\t  \"PLScoreCardAttributesInfo\":{\r\n                     \"title\":\"PLScoreCardAttributesInfo\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                          \"properties\": {\r\n                            \"scoreCardBrandWelcomeDate\": {\r\n                                \"title\": \"Score Card Brand Welcome Date\",\r\n                                \"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\"format\":\"date-time\",\r\n                                \"description\": \"Score Card Brand Welcome Date\"\r\n                            },\r\n                            \"hubplBrandWelcomeDate\": {\r\n                                \"title\": \"HUBPL Brand Welcome Date\",\r\n                                \"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\"format\":\"date-time\",\r\n                                \"description\": \"HUBPL Brand Welcome Date\"\r\n                            },\r\n\t\t\t\t\t\t\t\"bestScoreCardEmail\": {\r\n                                \"title\": \"Best Score Card Email\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Best Score Card Email\"\r\n                            },\r\n\t\t\t\t\t\t\t\"dollarsToGold\": {\r\n                                \"title\": \"DollarsToGold\",\r\n                                \"type\": \"integer\",\r\n                                \"description\": \"DollarsToGold\"\r\n                            },\r\n\t\t\t\t\t\t\t\"goldFlag\": {\r\n                                \"title\": \"Gold Flag\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Gold Flag\"\r\n                            },\r\n\t\t\t\t\t\t\t\"goldWelcomeDate\": {\r\n                                \"title\": \"Gold Welcome Date\",\r\n                                \"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\"format\":\"date-time\",\r\n                                \"description\": \"Gold Welcome Date\"\r\n                            },\r\n\t\t\t\t\t\t\t\"goldLastEnrollDate\": {\r\n                                \"title\": \"Gold Last Welcome Date\",\r\n                                \"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\"format\":\"date-time\",\r\n                                \"description\": \"Gold Last Welcome Date\"\r\n                            },\r\n                            \"consectiveGoldDays\": {\r\n                                \"title\": \"Consective Gold Days\",\r\n                                \"type\": \"integer\",\t\t\t\t\t\t\t\t\r\n                                \"description\": \"Last BM Purchase Date\"\r\n                            },\r\n\t\t\t\t\t\t\t\"scoreCardFlag\": {\r\n                                \"title\": \"Score Card Flag\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Score Card Flag\"\r\n                            }\r\n                          }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n                    }\r\n                 \r\n                }\r\n              \r\n            }\r\n        },\r\n \"allOf\": [\r\n            {\r\n            \"$ref\": \"#/definitions/PLScoreCardAttributes\"\r\n            }\r\n\t\t\t]\r\n      }\r\n\r\n"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"fieldgroups"
									],
									"query": [
										{
											"key": "TENANT_ID",
											"value": "{{TENANT_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Public Lands Store Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"var PL_Store_Details_FG_Id = json['$id'];\r",
											"postman.setEnvironmentVariable(\"PL_Store_Details_FG_Id\", PL_Store_Details_FG_Id);\r",
											"tests[\"PL_Store_Details_FG_Id = \" + PL_Store_Details_FG_Id] = true; \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Public Lands Store Details\",\r\n  \"type\": \"object\",\r\n  \"description\": \"Field group for Public Lands Store Details\",\r\n  \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n\r\n  \r\n   \"definitions\": {\r\n            \"PLStoreDetails\": {\r\n              \"properties\": {\r\n                \"{{dsgtenantId}}\": {\r\n                  \"type\":\"object\",\r\n\t\t\t\t  \"properties\": {\r\n\t\t\t\t\t\t\t  \"PLStoreDetailsInfo\":{\r\n                     \"title\":\"PLStoreDetailsInfo\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                          \"properties\": {\r\n                            \r\n\t\t\t\t\t\t\t\"rank1DistancetoClosestStrore\": {\r\n                                \"title\": \"Rank 1 Distance to Closest Strore\",\r\n                                \"type\": \"integer\",\r\n                                \"description\": \"Rank 1 Distance to Closest Strore\"\r\n                            },\r\n                            \"rank2ClosestStore\": {\r\n                                \"title\": \"Rank 2 Closest Store\",\r\n                                \"type\": \"integer\",\t\t\t\t\t\t\t\t\r\n                                \"description\": \"Rank 2 Closest Store\"\r\n                            },\r\n\t\t\t\t\t\t\t\"Rank2DistancetoClosestStrore\": {\r\n                                \"title\": \"Rank 2 Distance to Closest Strore\",\r\n                                \"type\": \"integer\",\r\n                                \"description\": \"Rank 2 Distance to Closest Strore\"\r\n                            },\r\n                            \"rank3ClosestStore\": {\r\n                                \"title\": \"Rank 3 Closest Store\",\r\n                                \"type\": \"integer\",\t\t\t\t\t\t\t\t\r\n                                \"description\": \"Rank 3 Closest Store\"\r\n                            },\r\n\t\t\t\t\t\t\t\"Rank3DistancetoClosestStrore\": {\r\n                                \"title\": \"Rank 3 Distance to Closest Strore\",\r\n                                \"type\": \"integer\",\r\n                                \"description\": \"Rank 3 Distance to Closest Strore\"\r\n                            }\r\n\t\t\t\t\t\t\t\r\n                          }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n                    }\r\n                 \r\n                }\r\n              \r\n            }\r\n        },\r\n \"allOf\": [\r\n            {\r\n            \"$ref\": \"#/definitions/PLStoreDetails\"\r\n            }\r\n\t\t\t]\r\n      }\r\n\r\n"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"fieldgroups"
									],
									"query": [
										{
											"key": "TENANT_ID",
											"value": "{{TENANT_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Public Lands Transaction Total",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"var PL_Transaction_Total_FG_Id = json['$id'];\r",
											"postman.setEnvironmentVariable(\"PL_Transaction_Total_FG_Id\", PL_Transaction_Total_FG_Id);\r",
											"tests[\"PL_Transaction_Total_FG_Id = \" + PL_Transaction_Total_FG_Id] = true; \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Public Lands Transaction Total Details\",\r\n  \"type\": \"object\",\r\n  \"description\": \"Field group for Public Lands Transaction Total Details\",\r\n  \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n\r\n  \r\n   \"definitions\": {\r\n            \"PLTransactionTotalDetails\": {\r\n              \"properties\": {\r\n                \"{{dsgtenantId}}\": {\r\n                  \"type\":\"object\",\r\n\t\t\t\t  \"properties\": {\r\n\t\t\t\t\t\t\t  \"PLTransactionTotalInfo\":{\r\n                     \"title\":\"PLTransactionTotalInfo\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                          \"properties\": {\r\n                            \r\n\t\t\t\t\t\t\t\"transactionTotal1Y\": {\r\n                                \"title\": \"Transaction Total 1 Y\",\r\n                                \"type\": \"integer\",\r\n                                \"description\": \"Transaction Total 1 Y\"\r\n                            },\r\n                            \"TransactionTotal2Y\": {\r\n                                \"title\": \"Transaction Total 2 Y\",\r\n                                \"type\": \"integer\",\t\t\t\t\t\t\t\t\r\n                                \"description\": \"Transaction Total 2 Y\"\r\n                            }\r\n\t\t\t\t\t\t\t\r\n                          }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n                    }\r\n                 \r\n                }\r\n              \r\n            }\r\n        },\r\n \"allOf\": [\r\n            {\r\n            \"$ref\": \"#/definitions/PLTransactionTotalDetails\"\r\n            }\r\n\t\t\t]\r\n      }\r\n\r\n"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"fieldgroups"
									],
									"query": [
										{
											"key": "TENANT_ID",
											"value": "{{TENANT_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Public Lands Generic Attributes",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"var PL_Generic_Attr_Id = json['$id'];\r",
											"postman.setEnvironmentVariable(\"PL_Generic_Attr_Id\", PL_Generic_Attr_Id);\r",
											"tests[\"PL_Generic_Attr_Id = \" + PL_Generic_Attr_Id] = true; \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Public Lands Generic Attributes\",\r\n  \"type\": \"object\",\r\n  \"description\": \"Field group for Public Lands Generic Attribute\",\r\n  \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n\r\n  \r\n   \"definitions\": {\r\n            \"plGenericAttributes\": {\r\n              \"properties\": {\r\n                \"{{dsgtenantId}}\": {\r\n                  \"type\":\"object\",\r\n\t\t\t\t  \"properties\": {\r\n\t\t\t\t\t\t\t  \"publicLands\":{\r\n                     \"title\":\"publicLands\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n\t\t\r\n                          \"properties\": {\r\n                            \r\n\t\t\t\t\t\t\t\"plHubMasterAccountID\": {\r\n                                \"title\": \"PL Hub Master Account ID\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"PL Hub Master Account ID\"\r\n                            },\r\n                            \"hubFlag\": {\r\n                                \"title\": \"Hub Flag\",\r\n                                \"type\": \"string\",\t\t\t\t\t\t\t\t\r\n                                \"description\": \"Hub Flag\"\r\n                            },\r\n\t\t\t\t\t\t\t\"bestEmail\": {\r\n                                \"title\": \"Best Email\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Best Email\"\r\n                            },\r\n                            \"emailOnlyFlag\": {\r\n                                \"title\": \"Email Only Flag\",\r\n                                \"type\": \"string\",\t\t\t\t\t\t\t\t\r\n                                \"description\": \"Email Only Flag\"\r\n                            },\r\n\t\t\t\t\t\t\t\"rookie\": {\r\n                                \"title\": \"Rookie\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Rookie\"\r\n                            },\r\n\t\t\t\t\t\t\t\"switchHitter\": {\r\n                                \"title\": \"Switch Hitter\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Switch Hitter\"\r\n                            }\r\n\t\t\t\t\t\t\t\r\n                          }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\r\n                    }\r\n                 \r\n                }\r\n              \r\n            }\r\n        },\r\n \"allOf\": [\r\n            {\r\n            \"$ref\": \"#/definitions/plGenericAttributes\"\r\n            }\r\n\t\t\t]\r\n      }\r\n\r\n"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"fieldgroups"
									],
									"query": [
										{
											"key": "TENANT_ID",
											"value": "{{TENANT_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Public Lands Schema",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"type\": \"object\",\r\n  \"title\": \"Public Lands\",\r\n  \"description\": \"Schema for Public Lands\",\r\n  \"allOf\": [{\r\n    \"$ref\": \"https://ns.adobe.com/xdm/context/profile\"\r\n  },\r\n    {\r\n       \"$ref\": \"{{PL_Purchase_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{PL_Score_Card_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{PL_Store_Details_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{PL_Transaction_Total_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{PL_Generic_Attr_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{Identity_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{PL_DSGAudit_FG_Id}}\"\r\n     }\r\n\t ]\r\n}"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/schemas",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas"
									]
								}
							},
							"response": []
						},
						{
							"name": "Public Lands DSGAudit Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"var PL_DSGAudit_FG_Id = json['$id'];\r",
											"postman.setEnvironmentVariable(\"PL_DSGAudit_FG_Id\", PL_DSGAudit_FG_Id);\r",
											"tests[\"PL_DSGAudit_FG_Id = \" + PL_DSGAudit_FG_Id] = true; \r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"title\":\"Public Lands DSG Audit Details\",\r\n   \"type\":\"object\",\r\n   \"description\":\"Field group for Public Lands DSG Audit Details\",\r\n   \"meta:intendedToExtend\":[\r\n      \"https://ns.adobe.com/xdm/context/profile\"\r\n   ],\r\n   \"definitions\":{\r\n      \"pldsgsAuditDetails\":{\r\n         \"properties\":{\r\n            \"{{dsgtenantId}}\":{\r\n               \"type\":\"object\",\r\n\t\t\t   \"properties\": {\r\n\t\t\t\t\t\"publicLands\":{\r\n                     \"title\":\"publicLands\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n               \"properties\":{\r\n                  \"dsgAudit\":{\r\n                     \"title\":\"DSG Audit\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                    \"$ref\": \"{{DSG_Audit_datatype_id}}\"\r\n                  }\r\n               }\r\n            }\r\n\t\t }\r\n\t  }\r\n         }\r\n      }\r\n   },\r\n   \"allOf\":[\r\n      {\r\n         \"$ref\":\"#/definitions/pldsgsAuditDetails\"\r\n      }\r\n   ]\r\n}"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"fieldgroups"
									],
									"query": [
										{
											"key": "TENANT_ID",
											"value": "{{TENANT_ID}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Retrieve your tenant ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);\r",
									"var TENANT_ID = json['tenantId'];\r",
									"postman.setEnvironmentVariable(\"TENANT_ID\", TENANT_ID);\r",
									"var dsgtenantId = \"_\"+json['tenantId'];\r",
									"postman.setEnvironmentVariable(\"dsgtenantId\", dsgtenantId);\r",
									"tests[\"dsgtenantId = \" + dsgtenantId] = true; "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/stats",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"stats"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create DSG Audit  Dates Datatype",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"DSG_Audit_datatype_id\", json.$id);\r",
									"postman.setEnvironmentVariable(\"DSG_Audit_datatype_encoded_id\", encodeURIComponent(json.$id));\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"type\":\"object\",\r\n   \"title\":\"DSG Audit\",\r\n   \"description\":\"DSG Audit data type\",\r\n   \"properties\":{\r\n      \"createDateTime\":{\r\n         \"title\":\"Create Date Time\",\r\n         \"description\":\"Create Date Time\",\r\n         \"type\":\"string\"\r\n      },\r\n      \"updateDateTime\":{\r\n         \"title\":\"Update Date Time\",\r\n         \"description\":\"Update Date Time\",\r\n         \"type\":\"string\"\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/datatypes",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"tenant",
								"datatypes"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Athlete Schema and Field groups Copy",
			"item": [
				{
					"name": "Athlete Status Details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);\r",
									"var Athlete_status_FG_Id = json['$id'];\r",
									"postman.setEnvironmentVariable(\"Athlete_status_FG_Id\", Athlete_status_FG_Id);\r",
									"tests[\"Athlete_status_FG_Id = \" + Athlete_status_FG_Id] = true; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Athlete Status Details\",\r\n  \"type\": \"object\",\r\n  \"description\": \"Field group for Athlete Status Details\",\r\n  \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n\r\n  \r\n   \"definitions\": {\r\n            \"AthleteStatusDetails\": {\r\n              \"properties\": {\r\n                \"{{dsgtenantId}}\": {\r\n                  \"type\":\"object\",\r\n                          \"properties\": {\r\n\t\t\t\t\t\t\t  \"AthleteStatus\":{\r\n                     \"title\":\"AthleteStatus\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                     \"properties\":{\r\n                            \"employeeFlag\": {\r\n                                \"title\": \"Employee Flag\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Employee Flag\"\r\n                            },\r\n                            \"ipPromotability\": {\r\n                                \"title\": \"IP Promotability\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"IP Promotability\"\r\n                            },\r\n\t\t\t\t\t\t\t\"mailDeliverabilityFlag\": {\r\n                                \"title\": \"mail Deliverability Flag\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"mail Deliverability Flag\"\r\n                            },\r\n\t\t\t\t\t\t\t \"removeFromProgram\": {\r\n                                \"title\": \"Remove From Program\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Remove From Program\"\r\n                            },\r\n\t\t\t\t\t\t\t\"status\": {\r\n                                \"title\": \"Status\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Status\",\r\n                  \"enum\":[\r\n                     \"A\",\r\n                     \"I\"\r\n                  ],\r\n                  \"meta:enum\":{\r\n                     \"A\":\"A\",\r\n                     \"I\":\"I\"\r\n                  }\r\n                            }\r\n                          }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n                    }\r\n                 \r\n                }\r\n              \r\n            }\r\n        },\r\n \"allOf\": [\r\n            {\r\n            \"$ref\": \"#/definitions/AthleteStatusDetails\"\r\n            }\r\n\t\t\t]\r\n      }\r\n\r\n"
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"tenant",
								"fieldgroups"
							],
							"query": [
								{
									"key": "TENANT_ID",
									"value": "{{TENANT_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Athlete Address Details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);\r",
									"var Athlete_Address_FG_Id = json['$id'];\r",
									"postman.setEnvironmentVariable(\"Athlete_Address_FG_Id\", Athlete_Address_FG_Id);\r",
									"tests[\"Athlete_Address_FG_Id = \" + Athlete_Address_FG_Id] = true; \r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"title\":\"Athlete Address Details\",\r\n   \"type\":\"object\",\r\n   \"description\":\"Field group for Athlete Address Details\",\r\n   \"meta:intendedToExtend\":[\r\n      \"https://ns.adobe.com/xdm/context/profile\"\r\n   ],\r\n   \"definitions\":{\r\n      \"AthleteAddressDetails\":{\r\n         \"properties\":{\r\n            \"{{dsgtenantId}}\":{\r\n               \"type\":\"object\",\r\n               \"properties\":{\r\n                  \"AthleteAddress\":{\r\n                     \"title\":\"AthleteAddress\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                     \"properties\":{\r\n                        \"appartment\":{\r\n                           \"title\":\"Appartment\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"Appartment\"\r\n                        },\r\n                        \"city\":{\r\n                           \"title\":\"City\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"City\"\r\n                        },\r\n                        \"country\":{\r\n                           \"title\":\"Country\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"Country\"\r\n                        },\r\n                        \"headofHouseHold\":{\r\n                           \"title\":\"Head of House Hold\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"Head of House Hold\"\r\n                        },\r\n                        \"marketingHouseHoldKey\":{\r\n                           \"title\":\"Marketing House Hold Key\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"Marketing House Hold Key\"\r\n                        },\r\n                        \"state\":{\r\n                           \"title\":\"State\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"State\"\r\n                        },\r\n                        \"street\":{\r\n                           \"title\":\"Street\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"Street\"\r\n                        },\r\n                        \"zip\":{\r\n                           \"title\":\"Zip\",\r\n                           \"type\":\"string\",\r\n                           \"description\":\"Zip\"\r\n                        }\r\n                     }\r\n                  }\r\n               }\r\n            }\r\n         }\r\n      }\r\n   },\r\n   \"allOf\":[\r\n      {\r\n         \"$ref\":\"#/definitions/AthleteAddressDetails\"\r\n      }\r\n   ]\r\n}"
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"tenant",
								"fieldgroups"
							],
							"query": [
								{
									"key": "TENANT_ID",
									"value": "{{TENANT_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Athlete DSGAudit Details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);\r",
									"var Athlete_DSGAudit_FG_Id = json['$id'];\r",
									"postman.setEnvironmentVariable(\"Athlete_DSGAudit_FG_Id\", Athlete_DSGAudit_FG_Id);\r",
									"tests[\"Athlete_DSGAudit_FG_Id = \" + Athlete_DSGAudit_FG_Id] = true; \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"title\":\"Athlete DSG Audit Details\",\r\n   \"type\":\"object\",\r\n   \"description\":\"Field group for Athlete DSG Audit Details\",\r\n   \"meta:intendedToExtend\":[\r\n      \"https://ns.adobe.com/xdm/context/profile\"\r\n   ],\r\n   \"definitions\":{\r\n      \"dsgsAuditDetails\":{\r\n         \"properties\":{\r\n            \"{{dsgtenantId}}\":{\r\n               \"type\":\"object\",\r\n\t\t\t   \"properties\": {\r\n\t\t\t\t\t\"athlete\":{\r\n                     \"title\":\"Athlete\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n               \"properties\":{\r\n                  \"dsgAudit\":{\r\n                     \"title\":\"DSG Audit\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                    \"$ref\": \"{{DSG_Audit_datatype_id}}\"\r\n                  }\r\n               }\r\n            }\r\n\t\t }\r\n\t  }\r\n         }\r\n      }\r\n   },\r\n   \"allOf\":[\r\n      {\r\n         \"$ref\":\"#/definitions/dsgsAuditDetails\"\r\n      }\r\n   ]\r\n}"
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"tenant",
								"fieldgroups"
							],
							"query": [
								{
									"key": "TENANT_ID",
									"value": "{{TENANT_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Identity Athlete Id Details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);\r",
									"var Identity_FG_Id = json['$id'];\r",
									"postman.setEnvironmentVariable(\"Identity_FG_Id\", Identity_FG_Id);\r",
									"tests[\"Identity_FG_Id = \" + Identity_FG_Id] = true; \r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Athlete Id Details\",\r\n  \"type\": \"object\",\r\n  \"description\": \"Field group for Athlete Id Details\",\r\n  \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n\r\n  \r\n   \"definitions\": {\r\n            \"AthleteIdDetails\": {\r\n              \"properties\": {\r\n                \"{{dsgtenantId}}\": {\r\n                  \"type\":\"object\",\r\n\t\t\t\t  \"properties\": {\r\n\t\t\t\t\t\"AthleteIdInfo\":{\r\n                     \"title\":\"AthleteIdInfo\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                          \"properties\": {\r\n                            \"athleteid\":{\r\n                        \"title\":\"Athlete ID\",\r\n                        \"description\":\"\",\r\n                        \"type\":\"string\"\r\n                            }\r\n\t\t\t\t\t\t\t\r\n                          }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n                    }\r\n                 \r\n                }\r\n              \r\n            }\r\n        },\r\n \"allOf\": [\r\n            {\r\n            \"$ref\": \"#/definitions/AthleteIdDetails\"\r\n            }\r\n\t\t\t]\r\n      }\r\n\r\n"
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"tenant",
								"fieldgroups"
							],
							"query": [
								{
									"key": "TENANT_ID",
									"value": "{{TENANT_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Athlete PII Details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);\r",
									"var Athlete_PII_FG_Id = json['$id'];\r",
									"postman.setEnvironmentVariable(\"Athlete_PII_FG_Id\", Athlete_PII_FG_Id);\r",
									"tests[\"Athlete_PII_FG_Id = \" + Athlete_PII_FG_Id] = true; \r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"title\":\"Athlete PII Details\",\r\n   \"type\":\"object\",\r\n   \"description\":\"Field group for Athlete PII Details\",\r\n   \"meta:intendedToExtend\":[\r\n      \"https://ns.adobe.com/xdm/context/profile\"\r\n   ],\r\n   \"definitions\":{\r\n      \"athletePII\":{\r\n         \"properties\":{\r\n            \"{{dsgtenantId}}\":{\r\n               \"type\":\"object\",\r\n\t\t\t   \"properties\": {\r\n\t\t\t\t\t\"athlete\":{\r\n                     \"title\":\"Athlete\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n\t\t\t   \"properties\": {\r\n\t\t\t\t\t\"athletePIIDetails\":{\r\n                     \"title\":\"AthletePIIDetails\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n               \"properties\":{\r\n                  \"firstName\":{\r\n                     \"title\":\"First Name\",\r\n                     \"type\":\"string\",\r\n                     \"description\":\"First Name\"\r\n                  },\r\n                  \"lastName\":{\r\n                     \"title\":\"Last Name\",\r\n                     \"type\":\"string\",\r\n                     \"description\":\"Last Name\"\r\n                  },\r\n                  \"birthDate\":{\r\n                     \"title\":\"Birth Date\",\r\n                     \"type\":\"string\",\r\n                     \"description\":\"Birth Date\"\r\n                  },\r\n                  \"gender\":{\r\n                     \"title\":\"Gender\",\r\n                     \"type\":\"string\",\r\n                     \"description\":\"Gender\",\r\n                     \"enum\":[\r\n                        \"M\",\r\n                        \"F\",\r\n                        \"Undefined\"\r\n                     ],\r\n                     \"meta:enum\":{\r\n                        \"M\":\"Male\",\r\n                        \"F\":\"Female\",\r\n                        \"Undefined\":\"Undefined\"\r\n                     }\r\n                  }\r\n               }\r\n\t\t\t}\r\n\t\t }\r\n\t\t\t}\r\n\t\t }\r\n            }\r\n         }\r\n      }\r\n   },\r\n   \"allOf\":[\r\n      {\r\n         \"$ref\":\"#/definitions/athletePII\"\r\n      }\r\n   ]\r\n}"
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"tenant",
								"fieldgroups"
							],
							"query": [
								{
									"key": "TENANT_ID",
									"value": "{{TENANT_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Athlete Purchase Details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);\r",
									"var Athlete_Purchase_FG_Id = json['$id'];\r",
									"postman.setEnvironmentVariable(\"Athlete_Purchase_FG_Id\", Athlete_Purchase_FG_Id);\r",
									"tests[\"Athlete_Purchase_FG_Id = \" + Athlete_Purchase_FG_Id] = true; \r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Athlete Purchase Details\",\r\n  \"type\": \"object\",\r\n  \"description\": \"Field group for Athlete Purchase Details\",\r\n  \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n\r\n  \r\n   \"definitions\": {\r\n            \"athletePurchase\": {\r\n              \"properties\": {\r\n                \"{{dsgtenantId}}\": {\r\n                  \"type\":\"object\",\r\n\t\t\t\t  \"properties\": {\r\n\t\t\t\t\t\"athlete\":{\r\n                     \"title\":\"Athlete\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n\t\t\t\t  \"properties\": {\r\n\t\t\t\t\t\t\t  \"athletePurchaseDetails\":{\r\n                     \"title\":\"AthletePurchaseDetails\",\r\n                     \"description\":\"\",\r\n                     \"type\":\"object\",\r\n                     \"isRequired\":false,\r\n                          \"properties\": {\r\n                            \"firstOnlinePurchase\": {\r\n                                \"title\": \"First Online Purchase\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"First Online Purchase\"\r\n                            },\r\n                            \"firstPurchase\": {\r\n                                \"title\": \"First Purchase\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"First Purchase\"\r\n                            },\r\n\t\t\t\t\t\t\t\"lastBMPurchase\": {\r\n                                \"title\": \"Last BM Purchase\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Last BM Purchase\"\r\n                            },\r\n\t\t\t\t\t\t\t \"lastPurchase\": {\r\n                                \"title\": \"Last Purchase\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Last Purchase\"\r\n                            },\r\n\t\t\t\t\t\t\t\"transactionTotal\": {\r\n                                \"title\": \"Transaction Total\",\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Transaction Total\"\r\n                            }\r\n                          }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n                    }\r\n                 \r\n                }\r\n              \r\n            }\r\n        },\r\n \"allOf\": [\r\n            {\r\n            \"$ref\": \"#/definitions/athletePurchase\"\r\n            }\r\n\t\t\t]\r\n      }\r\n\r\n"
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups?TENANT_ID={{TENANT_ID}}",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"tenant",
								"fieldgroups"
							],
							"query": [
								{
									"key": "TENANT_ID",
									"value": "{{TENANT_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Athlete Schema",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\": \"object\",\r\n  \"title\": \"Athlete Schema\",\r\n  \"description\": \"Schema for Athlete data\",\r\n  \"allOf\": [{\r\n    \"$ref\": \"https://ns.adobe.com/xdm/context/profile\"\r\n  },\r\n    {\r\n       \"$ref\": \"{{Athlete_status_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{Athlete_Address_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{Athlete_ID_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{Athlete_DSGAudit_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{Athlete_PII_FG_Id}}\"\r\n     },\r\n    {\r\n       \"$ref\": \"{{Athlete_Purchase_FG_Id}}\"\r\n     }\r\n\t ]\r\n}"
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/schemas",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"tenant",
								"schemas"
							]
						}
					},
					"response": []
				}
			],
			"description": "A field group is a reusable component that defines one or more fields to implement certain functions within a schema based on a compatible class."
		}
	]
}